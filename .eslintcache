[{"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\index.js":"1","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Taskbar.js":"2","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\App.js":"3","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\services\\dataService.js":"4","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\contexts\\dataContext.js":"5","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Shortcuts.js":"6","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Desktop.js":"7","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Resume.js":"8","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Clippy.js":"9","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\resumeData.js":"10"},{"size":165,"mtime":1606867620010,"results":"11","hashOfConfig":"12"},{"size":3078,"mtime":1606921501149,"results":"13","hashOfConfig":"12"},{"size":1145,"mtime":1606921566828,"results":"14","hashOfConfig":"12"},{"size":10354,"mtime":1606878860998,"results":"15","hashOfConfig":"12"},{"size":72,"mtime":1606868692335,"results":"16","hashOfConfig":"12"},{"size":1743,"mtime":1606923049861,"results":"17","hashOfConfig":"12"},{"size":963,"mtime":1606921588835,"results":"18","hashOfConfig":"12"},{"size":1163,"mtime":1606921993346,"results":"19","hashOfConfig":"12"},{"size":519,"mtime":1606921548247,"results":"20","hashOfConfig":"12"},{"size":1606,"mtime":1606922027526,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1avg15o",{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\index.js",[],["46","47"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Taskbar.js",["48","49","50"],"import React, { useContext, useEffect } from 'react'\r\nimport DataContext from '../contexts/dataContext'\r\nimport { TaskBar, List } from '@react95/core'\r\nimport styled from 'styled-components'\r\n\r\nconst Link = styled.a`\r\n    text-decoration: none;\r\n    color: inherit;\r\n`\r\n\r\n\r\nfunction Taskbar() {\r\n    const { projectRepo, react95Repo } = useContext(DataContext).getProjectInfo();\r\n    const { socialLinks } = useContext(DataContext).getSocialLinks();\r\n    const { agents } = useContext(DataContext).getAgents();\r\n    const [newAgent, setNewAgent] = React.useState('Clippy');\r\n    useContext(DataContext).changeAgent(newAgent);\r\n\r\n    const writeNewAgent = (newAgent) => {\r\n        setNewAgent(newAgent)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setNewAgent(newAgent);\r\n    }, []);\r\n\r\n    console.log('newAgent - ', useContext(DataContext).getCurrentAgent())\r\n\r\n    return (\r\n        <TaskBar\r\n            list={\r\n                <List> \r\n                    {/* <List.Item icon=\"awfext32_6049\">\r\n                        Change Helper\r\n                        <List>\r\n                            {agents.map((item) => {\r\n                                return (\r\n                                    <List.Item \r\n                                        key={item}\r\n                                        onClick={() => {writeNewAgent(item)}}\r\n                                    >\r\n                                        {item}\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </List.Item>\r\n                    <List.Divider/> */}\r\n                    <List.Item icon=\"awfext32_6049\">\r\n                        Contact Me\r\n                        <List>\r\n                            {socialLinks.map(({icon, name, url}) => {\r\n                                return (\r\n                                    <List.Item \r\n                                        as='a'\r\n                                        href={url}\r\n                                        icon={icon}\r\n                                        key={name}\r\n                                        rel='noopener noreferrer'\r\n                                        target='_blank'\r\n                                    >\r\n                                        {name}\r\n                                    </List.Item>\r\n                                )\r\n                            })}\r\n                        </List>\r\n                    </List.Item>\r\n                    <List.Divider />\r\n                    <List.Item className=\"pointer\" icon=\"brush\">\r\n                        <Link href={react95Repo} target=\"_blank\">Built with React95</Link>\r\n                    </List.Item>\r\n                    <List.Divider />\r\n                    <List.Item className=\"pointer\" icon=\"folder_file\">\r\n                        <Link href={projectRepo} target=\"_blank\">Repo</Link>\r\n                    </List.Item>\r\n                </List>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\nexport default Taskbar\r\n","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\App.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\services\\dataService.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\contexts\\dataContext.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Shortcuts.js",["51"],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\Desktop.js",["52","53","54","55","56"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport DataContext from '../contexts/dataContext'\r\nimport Shortcuts from './Shortcuts';\r\nimport Resume from './programs/Resume'\r\nimport Clippy from './programs/Clippy'\r\n\r\nconst playlist = [\r\n    {\r\n      url: 'https://archive.org/download/CC1301_windows_95/CC1301_windows_95_512kb.mp4',\r\n      title: 'Computer Chronicles - Windows 95'\r\n    }\r\n  ];\r\n\r\nconst Desktop = () => {\r\n\r\n    const [showResume, setShowResume] = React.useState(false);\r\n\r\n    const openResume = () => {\r\n        setShowResume(!showResume);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n            setShowResume(showResume);\r\n        }, []);\r\n        \r\n    return (\r\n        <React.Fragment>\r\n            <Shortcuts openResume={openResume}/>\r\n            {showResume ? <Resume openResume={openResume} showResume={showResume}></Resume> : <></>}\r\n            <Clippy/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Desktop","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Resume.js",[],"C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\Clippy.js",["57"],"import React, { useContext, useEffect } from 'react';\r\nimport { useClippy, ClippyProvider } from '@react95/clippy';\r\nimport DataContext from '../../contexts/dataContext'\r\n\r\nconst MyComponent = () => {\r\n    return (<></>);\r\n};\r\n\r\nconst Clippy = () => {\r\n\r\n  const {currentAgent} = useContext(DataContext).getCurrentAgent();\r\n\r\n  useEffect(() => {\r\n    \r\n  }, [currentAgent])\r\n  \r\n  return (\r\n    <ClippyProvider agentName={currentAgent}>\r\n        <MyComponent />\r\n    </ClippyProvider>\r\n  )\r\n};\r\n\r\nexport default Clippy;","C:\\Users\\Geo\\Documents\\Code\\HackReactor\\portfolio2\\portfolio\\src\\components\\programs\\programsData\\resumeData.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":15,"column":13,"nodeType":"64","messageId":"65","endLine":15,"endColumn":19},{"ruleId":"62","severity":1,"message":"66","line":19,"column":11,"nodeType":"64","messageId":"65","endLine":19,"endColumn":24},{"ruleId":"67","severity":1,"message":"68","line":25,"column":8,"nodeType":"69","endLine":25,"endColumn":10,"suggestions":"70"},{"ruleId":"62","severity":1,"message":"71","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":26},{"ruleId":"62","severity":1,"message":"72","line":1,"column":17,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"73","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":37},{"ruleId":"62","severity":1,"message":"74","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},{"ruleId":"62","severity":1,"message":"75","line":7,"column":7,"nodeType":"64","messageId":"65","endLine":7,"endColumn":15},{"ruleId":"67","severity":1,"message":"76","line":25,"column":12,"nodeType":"69","endLine":25,"endColumn":14,"suggestions":"77"},{"ruleId":"62","severity":1,"message":"78","line":2,"column":10,"nodeType":"64","messageId":"65","endLine":2,"endColumn":19},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'agents' is assigned a value but never used.","Identifier","unusedVar","'writeNewAgent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newAgent'. Either include it or remove the dependency array. You can also do a functional update 'setNewAgent(n => ...)' if you only need 'newAgent' in the 'setNewAgent' call.","ArrayExpression",["81"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'useContext' is defined but never used.","'DataContext' is defined but never used.","'playlist' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'showResume'. Either include it or remove the dependency array. You can also do a functional update 'setShowResume(s => ...)' if you only need 'showResume' in the 'setShowResume' call.",["82"],"'useClippy' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [newAgent]",{"range":"87","text":"88"},"Update the dependencies array to be: [showResume]",{"range":"89","text":"90"},[774,776],"[newAgent]",[671,673],"[showResume]"]